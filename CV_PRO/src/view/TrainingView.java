/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.TrainingController;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.*;
import org.hibernate.SessionFactory;
import org.jdesktop.swingx.JXDatePicker;

/**
 *
 * @author chochong
 */
public class TrainingView extends javax.swing.JInternalFrame {

    /**
     * Creates new form TrainingView
     */
    //private SessionFactory factory;
    private final SerbaGuna sg;
    private TrainingController controller;
    private String[] cmb = {"idtraining", "trainingname", "trainingorganization", "startdate", "enddate"};
    
    /**
     * Konstruktor default kelas TrainingView berparameter
     * @param factory - SessionFactory
     */
    public TrainingView(SessionFactory factory) {
        initComponents();
        controller = new TrainingController(factory);
        sg = new SerbaGuna();
        bindingTraining(controller.getAll());
        reset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmbKategoriTraining = new javax.swing.JComboBox<>();
        txtFindTraining = new javax.swing.JTextField();
        btnFindC = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTraining = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        txtTrainingId = new javax.swing.JTextField();
        txtTrainingName = new javax.swing.JTextField();
        jlTrainingId = new javax.swing.JLabel();
        jlProgrammingName = new javax.swing.JLabel();
        btnDropC = new javax.swing.JButton();
        btnSaveC = new javax.swing.JButton();
        jlProgrammingName1 = new javax.swing.JLabel();
        jlProgrammingName2 = new javax.swing.JLabel();
        jlProgrammingName3 = new javax.swing.JLabel();
        txtOrganization = new javax.swing.JTextField();
        dateStart = new org.jdesktop.swingx.JXDatePicker();
        dateEnd = new org.jdesktop.swingx.JXDatePicker();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Master Training");

        cmbKategoriTraining.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID Training", "Nama Training", "Penyelenggara", "Tanggal Mulai", "Tanggal Selesai" }));
        cmbKategoriTraining.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbKategoriTrainingActionPerformed(evt);
            }
        });

        txtFindTraining.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFindTrainingKeyReleased(evt);
            }
        });

        btnFindC.setText("FIND");
        btnFindC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindCActionPerformed(evt);
            }
        });

        tblTraining.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblTraining.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTrainingMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTraining);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmbKategoriTraining, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFindTraining, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFindC)
                .addGap(25, 25, 25))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbKategoriTraining, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFindTraining, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindC))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N
        jPanel2.setToolTipText("Detail");

        txtTrainingId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTrainingIdActionPerformed(evt);
            }
        });
        txtTrainingId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTrainingIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTrainingIdKeyTyped(evt);
            }
        });

        txtTrainingName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTrainingNameKeyTyped(evt);
            }
        });

        jlTrainingId.setText("Training ID");

        jlProgrammingName.setText("Training Name");

        btnDropC.setText("DROP");
        btnDropC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDropCActionPerformed(evt);
            }
        });

        btnSaveC.setText("SAVE");
        btnSaveC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCActionPerformed(evt);
            }
        });

        jlProgrammingName1.setText("Penyelenggara");

        jlProgrammingName2.setText("Tanggal Mulai");

        jlProgrammingName3.setText("Tanggal Selesai");

        txtOrganization.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOrganizationKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jlTrainingId, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jlProgrammingName1)
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlProgrammingName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtTrainingId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(txtTrainingName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtOrganization, javax.swing.GroupLayout.Alignment.LEADING))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jlProgrammingName2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateStart, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jlProgrammingName3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnDropC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSaveC)
                                .addGap(32, 32, 32))
                            .addComponent(dateEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTrainingId)
                    .addComponent(txtTrainingId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlProgrammingName2)
                    .addComponent(dateStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlProgrammingName)
                    .addComponent(txtTrainingName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlProgrammingName3)
                    .addComponent(dateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlProgrammingName1)
                            .addComponent(txtOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDropC)
                            .addComponent(btnSaveC))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Method ketika kursor tidak pada textfield txtFindtraining
     * @param evt - KeyEvent
     */
    private void txtFindTrainingKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFindTrainingKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txtFindTraining.getText().equalsIgnoreCase("")) {
                bindingTraining(controller.search(cmb[cmbKategoriTraining.getSelectedIndex()], txtFindTraining.getText()));
            }
        }
        if (txtFindTraining.getText().equals("")) {
            bindingTraining(controller.getAll());
        }
    }//GEN-LAST:event_txtFindTrainingKeyReleased
    
    /**
     * Method ketika button Find ditekan
     * @param evt - KeyEvent
     */
    private void btnFindCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindCActionPerformed
        if (!txtFindTraining.equals("")){
            bindingTraining(controller.search(cmb[cmbKategoriTraining.getSelectedIndex()], txtFindTraining.getText()));
        }
    }//GEN-LAST:event_btnFindCActionPerformed
    
    /**
     * Method ketika txtTraining ditekan
     * @param evt - KeyEvent
     */
    private void txtTrainingIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTrainingIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTrainingIdActionPerformed
    
    /**
     * Method ketika txtTraining tidak ditekan
     * @param evt - KeyEvent
     */
    private void txtTrainingIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTrainingIdKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTrainingIdKeyReleased
    
    /**
     * Method ketikda txtTraining diketik
     * @param evt - KeyEvent
     */
    private void txtTrainingIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTrainingIdKeyTyped
        // TODO add your handling code here:
        //        ss.filterAngka(evt);
    }//GEN-LAST:event_txtTrainingIdKeyTyped
    
    /**
     * Method ketika txtTrainingName diketik
     * @param evt - KeyEvent
     */
    private void txtTrainingNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTrainingNameKeyTyped
        // TODO add your handling code here:
        //        sf.filterPass(evt);
    }//GEN-LAST:event_txtTrainingNameKeyTyped
    
    /**
     * Method ketika button Drop ditekan
     * @param evt - AtionEvent
     */
    private void btnDropCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDropCActionPerformed
        // TODO add your handling code here:
        int messageBox = JOptionPane.showConfirmDialog(this, "Are you sure want to delete this data ?", "Delete", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (messageBox == JOptionPane.YES_OPTION) {
            controller.delete(txtTrainingId.getText());
            JOptionPane.showMessageDialog(this, SerbaGuna.pesan.delete.getPesan());
            bindingTraining(controller.getAll());
            reset();
        }
        if (messageBox == JOptionPane.NO_OPTION) {
            JOptionPane.showMessageDialog(this, SerbaGuna.pesan.cancel.getPesan());
        }
    }//GEN-LAST:event_btnDropCActionPerformed
    
    /**
     * Method ketika button Save ditekan
     * @param evt - ActionEvent
     */
    private void btnSaveCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCActionPerformed
        // TODO add your handling code here:
        controller.saveOrUpdate(controller.getAutoId().toString(), txtTrainingName.getText(), txtOrganization.getText(), sg.getDateFormat(dateStart), sg.getDateFormat(dateStart));
        if (!txtTrainingId.isEnabled()) {
            JOptionPane.showMessageDialog(this, SerbaGuna.pesan.update.getPesan(), "Update", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, SerbaGuna.pesan.save, "Save", JOptionPane.INFORMATION_MESSAGE);
        }
        bindingTraining(controller.getAll());
        reset();
    }//GEN-LAST:event_btnSaveCActionPerformed
    
    /**
     * Method ketika txtOrganization diketik
     * @param evt - KeyEvent
     */
    private void txtOrganizationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrganizationKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrganizationKeyTyped
    
    /**
     * Methid ketika cmKategori dipilih
     * @param evt - ActionEvent
     */
    private void cmbKategoriTrainingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbKategoriTrainingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbKategoriTrainingActionPerformed
    /**
     * Method ketika baris pada tblTraining dipilih
     * @param evt - MouseEvent
     */
    private void tblTrainingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTrainingMouseClicked
        // TODO add your handling code here:
        int row = tblTraining.getSelectedRow();
        txtTrainingId.setText(tblTraining.getValueAt(row, 1).toString());
        txtTrainingName.setText(tblTraining.getValueAt(row, 2).toString());
        txtOrganization.setText(tblTraining.getValueAt(row, 3).toString());
        edit();
    }//GEN-LAST:event_tblTrainingMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDropC;
    private javax.swing.JButton btnFindC;
    private javax.swing.JButton btnSaveC;
    private javax.swing.JComboBox<String> cmbKategoriTraining;
    private org.jdesktop.swingx.JXDatePicker dateEnd;
    private org.jdesktop.swingx.JXDatePicker dateStart;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlProgrammingName;
    private javax.swing.JLabel jlProgrammingName1;
    private javax.swing.JLabel jlProgrammingName2;
    private javax.swing.JLabel jlProgrammingName3;
    private javax.swing.JLabel jlTrainingId;
    private javax.swing.JTable tblTraining;
    private javax.swing.JTextField txtFindTraining;
    private javax.swing.JTextField txtOrganization;
    private javax.swing.JTextField txtTrainingId;
    private javax.swing.JTextField txtTrainingName;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Method untuk memanggil isi dari tblTraining
     * @param object 
     */
    public void bindingTraining(List<Object> object) {
        String[] header = {"No.", "Training ID", "Training Name", "Training Organization", "Start Date", "End Date"};
        String[][] data = new String[object.size()][header.length];
        int i = 0;
        for (Object obj : object) {
            Training training = (Training) obj;
            data[i][0] = (i + 1) + "";
            data[i][1] = training.getIdtraining() + "";
            data[i][2] = training.getTrainingname() + "";
            data[i][3] = training.getTrainingorganization() + "";
            data[i][4] = training.getStartdate() + "";
            data[i][5] = training.getEnddate() + "";
            i++;
        }
        tblTraining.setModel(new DefaultTableModel(data, header));
        reset();
    }
    
    /**
     * Method untuk mengembalikan button dan textfield seperti keadaan awal
     */
    public void reset(){
        txtTrainingId.setText(controller.getAutoId().toString());
        txtTrainingId.setEnabled(false);
        txtTrainingName.setEnabled(true);
        txtOrganization.setEnabled(true);
    }
    
    /**
     * Method ketika proses edit
     */
    public void edit(){
        txtTrainingId.setEnabled(false);
    }
}
