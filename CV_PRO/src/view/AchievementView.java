/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.AchievementController;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.Achievement;
import org.hibernate.SessionFactory;
import view.SerbaGuna.pesan;

/**
 *
 * @author X453MA
 */
public class AchievementView extends javax.swing.JInternalFrame {

    private SerbaGuna sg;
    private AchievementController controller;
    private TableRowSorter<TableModel> rowSorter;
    
    /**
     * Creates new form OrganisasiView
     */
    public AchievementView(SessionFactory sessionFactory) {
        initComponents();
        sg = new SerbaGuna();
        controller = new AchievementController(sessionFactory);
        tblAchievement.setRowSorter(rowSorter);
        bindingAchievement(controller.getAll());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtAchievementId = new javax.swing.JTextField();
        txtAchievementName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Year = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnDrop = new javax.swing.JButton();
        txtYear = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEventName = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAchievement = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        cmbKategori = new javax.swing.JComboBox<>();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Achievement");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Achievement Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setText("Achievement ID");

        jLabel2.setText("Achievement Name");

        txtAchievementId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAchievementIdKeyTyped(evt);
            }
        });

        jLabel4.setText("Event Name");

        Year.setText("Year");

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDrop.setText("DROP");
        btnDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDropActionPerformed(evt);
            }
        });

        txtEventName.setColumns(20);
        txtEventName.setRows(5);
        jScrollPane1.setViewportView(txtEventName);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Year)))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtAchievementName, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(txtYear)
                    .addComponent(txtAchievementId))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDrop))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtAchievementId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtAchievementName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Year)
                            .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDrop)
                        .addComponent(btnSave))))
        );

        tblAchievement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblAchievement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAchievementMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblAchievement);

        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        cmbKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID Achievement", "Nama Achievement", "Nama Event", "Tahun" }));
        cmbKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbKategoriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearch)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Menyaring huruf dalam input
     * @param evt (KeyEvent)
     */
    private void txtAchievementIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAchievementIdKeyTyped
        // TODO add your handling code here:
        sg.filterHuruf(evt);
    }//GEN-LAST:event_txtAchievementIdKeyTyped

    /**
     * Menyimpan data saat menekan button save
     * @param evt (ActionEvent)
     */
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(!txtAchievementName.getText().equals("") && !txtEventName.getText().equals("") && !txtYear.getText().equals("")){
            if(!txtAchievementName.getText().substring(0, 1).equals(" ") && !txtEventName.getText().substring(0, 1).equals(" ") && !txtYear.getText().substring(0, 1).equals(" ")){
                controller.saveOrUpdate(txtAchievementId.getText(), txtAchievementName.getText(), txtEventName.getText(), txtYear.getText());
                if(!txtAchievementId.isEnabled()){
                    JOptionPane.showMessageDialog(this, pesan.update.getPesan(), "Update", JOptionPane.INFORMATION_MESSAGE);
                }
                else{
                    JOptionPane.showMessageDialog(this, pesan.save.getPesan(), "Save", JOptionPane.INFORMATION_MESSAGE);
                }
                bindingAchievement(controller.getAll());
                reset();
            }
        }
        else JOptionPane.showMessageDialog(this, pesan.kosong.getPesan(), "Kosong", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * Untuk menghapus data dengan menggunakan button drop
     * @param evt (ActionEvent)
     */
    private void btnDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDropActionPerformed
        // TODO add your handling code here:
        int messageBox = JOptionPane.showConfirmDialog(this, "Apakah anda yakin ?", "Delete", JOptionPane.YES_NO_OPTION ,JOptionPane.WARNING_MESSAGE);
        if(messageBox == JOptionPane.YES_OPTION){
            controller.delete(txtAchievementId.getText());
            JOptionPane.showMessageDialog(this, SerbaGuna.pesan.delete.getPesan());
            bindingAchievement(controller.getAll());
            reset();
        }
        if(messageBox == JOptionPane.NO_OPTION){
            JOptionPane.showMessageDialog(this, SerbaGuna.pesan.cancel.getPesan());
        }
    }//GEN-LAST:event_btnDropActionPerformed

    /**
     * Mengambil data dari baris yang di klik oleh mouse
     * @param evt (MouseEvent)
     */
    private void tblAchievementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAchievementMouseClicked
        // TODO add your handling code here:
        int row = tblAchievement.getSelectedRow();
        txtAchievementId.setText(tblAchievement.getValueAt(row, 1).toString());
        txtAchievementName.setText(tblAchievement.getValueAt(row, 2).toString());
        txtEventName.setText(tblAchievement.getValueAt(row, 3).toString());
        txtYear.setText(tblAchievement.getValueAt(row, 4).toString());
        edit();
    }//GEN-LAST:event_tblAchievementMouseClicked

    /**
     * Untuk melakukan pencarian dari kategori dengan menekan tombol enter dan menampilkan seluruh data saat
     * textfield search dikosongkan
     * @param evt (KeyEvent)
     */
    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        if (!txtSearch.getText().equals("")) {
            btnSearch.setEnabled(true);
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String text = txtSearch.getText();
                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                    } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text, cmbKategori.getSelectedIndex()+1));
                }
            }
        }
        if (txtSearch.getText().equals("")) {
            bindingAchievement(controller.getAll());
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    /**
     * Melakukan pencarian dengan menggunakan button search
     * @param evt (ActionEvent)
     */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        if(!txtSearch.getText().equalsIgnoreCase("")){
            String text = txtSearch.getText();
            if (text.trim().length() == 0) {
                rowSorter.setRowFilter(null);
                } else {
                rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text, cmbKategori.getSelectedIndex()+1));
            }            
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void cmbKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbKategoriActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Year;
    private javax.swing.JButton btnDrop;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cmbKategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAchievement;
    private javax.swing.JTextField txtAchievementId;
    private javax.swing.JTextField txtAchievementName;
    private javax.swing.JTextArea txtEventName;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    /**
     * Untuk menampilkan seluruh data ke dalam tabel
     * @param achievement (List<Object>) data yang akan dimasukan ke tabel
     */
    private void bindingAchievement(List<Object> achievement) {
        String[] header = {"No", "ID Achievement", "Nama Achievement", "Nama Event", "Tahun"};
        String[][] data = new String[achievement.size()][header.length];
        int i = 0;
        for (Object object : achievement) {
            Achievement ach = (Achievement) object;
            data[i][0] = (i + 1) + "";
            data[i][1] = ach.getIdachievement() + "";
            data[i][2] = ach.getAchievementname() + "";
            data[i][3] = ach.getEventname() + "";
            data[i][4] = ach.getYear() + "";
            i++;
        }
        tblAchievement.setModel(new DefaultTableModel(data, header));
        this.rowSorter = new TableRowSorter<>(tblAchievement.getModel());
        reset();
    } 
    
    /**
     * menonaktifkan texfield achievementId dan button drop
     */
    private void edit() {
        txtAchievementId.setEnabled(false);
        btnDrop.setEnabled(true);
    }
    
    /**
     * Menampilkan ID terakhir di textfield achievementId dan mengaktifkan serta menghilangkan kemampuan meng-edit 
     * textfield tersebut, menonaktifkan button drop,save dan search, mengosongkan textfield achievementName,eventName,dan year
     */
    private void reset() {
        txtAchievementId.setText(controller.getAutoId()+"");
        txtAchievementId.setEnabled(true);
        txtAchievementName.setText("");
        txtEventName.setText("");
        txtYear.setText("");
        btnDrop.setEnabled(false);
        btnSearch.setEnabled(false);
        txtAchievementId.setEditable(false);
        tblAchievement.setRowSorter(rowSorter);
    }           

}
